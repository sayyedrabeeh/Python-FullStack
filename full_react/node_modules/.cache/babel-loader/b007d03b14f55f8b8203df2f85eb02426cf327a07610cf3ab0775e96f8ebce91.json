{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\PythoFullStack\\\\full_react\\\\src\\\\react1\\\\pratical\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [todo, setTodo] = useState([]);\n  const [text, setText] = useState('');\n  const addtodo = () => {\n    setTodo([...todo, text]);\n    setText('');\n  };\n  const delete1 = ({\n    index\n  }) => {\n    const todos = todo.filter(i => i !== index);\n    setTodo(todos);\n  };\n  const edit = ({\n    index\n  }) => {\n    //    const newtext = prompt(todo[index])\n    const updatedtodo = [...todo];\n    updatedtodo[index] = newtext;\n    setTodo(updatedtodo);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setText(e.target.value),\n      placeholder: \" write next todo item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addtodo,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todo.map((item, index) => {\n        /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: delete1(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: edit(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Todo, \"ZMX9nNDBTmmlH/Av+PLNL6svdwQ=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","todo","setTodo","text","setText","addtodo","delete1","index","todos","filter","i","edit","updatedtodo","newtext","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","placeholder","onClick","map","item","_c","$RefreshReg$"],"sources":["D:/project/PythoFullStack/full_react/src/react1/pratical/Todo.jsx"],"sourcesContent":["import React,{useState} from \"react\";\r\n\r\n\r\n\r\nfunction Todo(){\r\n     const [todo,setTodo] = useState([])\r\n     const [text,setText] = useState('')\r\n\r\n     const addtodo = () =>{\r\n        setTodo([...todo,text])\r\n        setText('')\r\n     }\r\n\r\n    const delete1 = ({index}) =>{\r\n         const todos = todo.filter((i) => i!== index)\r\n         setTodo(todos) \r\n    }\r\n    const edit = ({index}) =>{\r\n    //    const newtext = prompt(todo[index])\r\n       const updatedtodo = [...todo]\r\n       updatedtodo[index] = newtext\r\n       setTodo(updatedtodo)\r\n    }\r\n    return(\r\n        <>\r\n        <h1>{text}</h1>\r\n        <input onChange={(e) => setText(e.target.value)} placeholder=\" write next todo item\" />\r\n        <button onClick={addtodo} >ADD</button>\r\n\r\n        \r\n            <ul>\r\n                {todo.map((item,index) =>{\r\n                    <li key={index}>{item }\r\n                    <button onClick={delete1(index)}>Delete</button>\r\n                    <button onClick={edit(index)}>Edit</button>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n         \r\n\r\n        \r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Todo"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIrC,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACV,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACS,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAMW,OAAO,GAAGA,CAAA,KAAK;IAClBH,OAAO,CAAC,CAAC,GAAGD,IAAI,EAACE,IAAI,CAAC,CAAC;IACvBC,OAAO,CAAC,EAAE,CAAC;EACd,CAAC;EAEF,MAAME,OAAO,GAAGA,CAAC;IAACC;EAAK,CAAC,KAAI;IACvB,MAAMC,KAAK,GAAGP,IAAI,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAIH,KAAK,CAAC;IAC5CL,OAAO,CAACM,KAAK,CAAC;EACnB,CAAC;EACD,MAAMG,IAAI,GAAGA,CAAC;IAACJ;EAAK,CAAC,KAAI;IACzB;IACG,MAAMK,WAAW,GAAG,CAAC,GAAGX,IAAI,CAAC;IAC7BW,WAAW,CAACL,KAAK,CAAC,GAAGM,OAAO;IAC5BX,OAAO,CAACU,WAAW,CAAC;EACvB,CAAC;EACD,oBACIhB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAAkB,QAAA,EAAKX;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACftB,OAAA;MAAOuB,QAAQ,EAAGC,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACC,WAAW,EAAC;IAAuB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvFtB,OAAA;MAAQ4B,OAAO,EAAEnB,OAAQ;MAAAS,QAAA,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGnCtB,OAAA;MAAAkB,QAAA,EACKb,IAAI,CAACwB,GAAG,CAAC,CAACC,IAAI,EAACnB,KAAK,KAAI;QACrB,aAAAX,OAAA;UAAAkB,QAAA,GAAiBY,IAAI,eACrB9B,OAAA;YAAQ4B,OAAO,EAAElB,OAAO,CAACC,KAAK,CAAE;YAAAO,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChDtB,OAAA;YAAQ4B,OAAO,EAAEb,IAAI,CAACJ,KAAK,CAAE;YAAAO,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAFlCX,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CAAC;MACT,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eAIP,CAAC;AAIX;AAAClB,EAAA,CAzCQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA2Cb,eAAeA,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}