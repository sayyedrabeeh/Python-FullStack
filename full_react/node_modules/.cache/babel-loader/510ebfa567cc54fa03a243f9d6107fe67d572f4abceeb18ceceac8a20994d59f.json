{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\PythoFullStack\\\\full_react\\\\src\\\\react1\\\\pratical\\\\timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => setSeconds(prev => prev + 1), 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const reset = () => {\n    setSeconds(0);\n    setIsRunning(false);\n  };\n  const formatTime = s => {\n    const h = Math.floor(s / 3600);\n    const m = Math.floor(s % 3600 / 60);\n    const sec = s % 60;\n    return `${h}:${m}:${sec}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formatTime(seconds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isRunning ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(false),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(true),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"F4AdTKo2IKqs+4J+hL9tR+khH0g=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Timer","_s","seconds","setSeconds","isRunning","setIsRunning","interval","setInterval","prev","clearInterval","reset","formatTime","s","h","Math","floor","m","sec","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/project/PythoFullStack/full_react/src/react1/pratical/timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Timer() {\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isRunning) {\r\n      interval = setInterval(() => setSeconds((prev) => prev + 1), 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRunning]);\r\n\r\n  const reset = () => {\r\n    setSeconds(0);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const formatTime = (s) => {\r\n    const h = Math.floor(s / 3600);\r\n    const m = Math.floor((s % 3600) / 60);\r\n    const sec = s % 60;\r\n    return `${h}:${m}:${sec}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"40px\" }}>\r\n      <h1>{formatTime(seconds)}</h1>\r\n      {isRunning ? (\r\n        <>\r\n          <button onClick={() => setIsRunning(false)}>Stop</button>\r\n          <button onClick={reset}>Reset</button>\r\n        </>\r\n      ) : (\r\n        <button onClick={() => setIsRunning(true)}>Start</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ;IACZ,IAAIF,SAAS,EAAE;MACbE,QAAQ,GAAGC,WAAW,CAAC,MAAMJ,UAAU,CAAEK,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;IACpE;IACA,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,MAAMM,KAAK,GAAGA,CAAA,KAAM;IAClBP,UAAU,CAAC,CAAC,CAAC;IACbE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMM,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,GAAG,IAAI,CAAC;IAC9B,MAAMI,CAAC,GAAGF,IAAI,CAACC,KAAK,CAAEH,CAAC,GAAG,IAAI,GAAI,EAAE,CAAC;IACrC,MAAMK,GAAG,GAAGL,CAAC,GAAG,EAAE;IAClB,OAAO,GAAGC,CAAC,IAAIG,CAAC,IAAIC,GAAG,EAAE;EAC3B,CAAC;EAED,oBACEpB,OAAA;IAAKqB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDxB,OAAA;MAAAwB,QAAA,EAAKV,UAAU,CAACT,OAAO;IAAC;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7BrB,SAAS,gBACRP,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAAC,KAAK,CAAE;QAAAgB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzD5B,OAAA;QAAQ6B,OAAO,EAAEhB,KAAM;QAAAW,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACtC,CAAC,gBAEH5B,OAAA;MAAQ6B,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAAC,IAAI,CAAE;MAAAgB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CArCQD,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAuCd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}