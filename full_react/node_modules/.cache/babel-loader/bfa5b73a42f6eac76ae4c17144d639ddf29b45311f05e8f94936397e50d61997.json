{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\PythoFullStack\\\\full_react\\\\src\\\\react2\\\\todolist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"addTodo\":\n      return {\n        ...state,\n        todos: [...state.todos, {\n          text: action.payload,\n          id: Date.now(),\n          completed: false\n        }]\n      };\n    case \"delete\":\n      return {\n        ...state,\n        todos: state.todos.filter(t => t.id != action.payload)\n      };\n    case \"toggle\":\n      return {\n        ...state,\n        todos: state.todos.map(todo => todo.id === action.payload ? {\n          ...todo,\n          completed: !todo.completed\n        } : todo)\n      };\n  }\n}\nconst initialState = {\n  todos: [],\n  completed: false\n};\nfunction Todo() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [text, setText] = useState('');\n  const [editid, setEditid] = use;\n  const addtodo = () => {\n    dispatch({\n      type: \"addTodo\",\n      payload: text\n    });\n    setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List with usereducer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      type: \"text\",\n      placeholder: \" enter something\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addtodo,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), state.todos.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: item.completed ? \"line-through\" : \"none\"\n        },\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: 'toggle',\n          payload: item.id\n        }),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: 'delete',\n          payload: item.id\n        }),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n_s(Todo, \"wnfI1KaLqXrCnJqpoPuEPzZhEWk=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useReducer","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","reducer","state","action","type","todos","text","payload","id","Date","now","completed","filter","t","map","todo","initialState","Todo","_s","dispatch","setText","editid","setEditid","use","addtodo","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","item","style","textDecoration","_c","$RefreshReg$"],"sources":["D:/project/PythoFullStack/full_react/src/react2/todolist.jsx"],"sourcesContent":["\r\nimport React,{ useState,useReducer, useContext } from \"react\";\r\n\r\nfunction reducer(state,action){\r\n    switch(action.type){\r\n        case \"addTodo\":\r\n            return {...state,todos:[...state.todos,{ text:action.payload,id:Date.now(),completed:false}] }\r\n            \r\n        case \"delete\":\r\n             return {...state ,todos:state.todos.filter((t) => t.id != action.payload) }\r\n        \r\n        case \"toggle\":\r\n            return {...state,todos:state.todos.map((todo) =>\r\n                todo.id === action.payload ? {...todo,completed:!todo.completed}: todo\r\n             )}\r\n\r\n    }\r\n\r\n}\r\nconst initialState = {\r\n    todos:[],\r\n    completed : false\r\n\r\n}\r\n\r\nfunction Todo(){\r\n    const [state,dispatch] = useReducer(reducer,initialState)\r\n    const [text,setText] = useState('')\r\n    const [editid,setEditid] = use\r\n    const addtodo = () =>{\r\n        dispatch({type:\"addTodo\" ,payload:text})\r\n        setText('')\r\n    }\r\n    return(\r\n        <>\r\n        <h2>Todo List with usereducer</h2>\r\n        <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\" placeholder=\" enter something\"/>\r\n        <button onClick={addtodo}>ADD</button>\r\n        \r\n        {state.todos.map((item) =>(\r\n            <li key={item.id}>\r\n                <span style={{textDecoration: item.completed ? \"line-through\" : \"none\"}}>\r\n                {item.text}\r\n                </span>\r\n                <button onClick={() => dispatch({type:'toggle',payload:item.id})}>Done</button>\r\n                <button onClick={() => dispatch({type:'delete',payload:item.id})}>Delete</button>\r\n            </li>\r\n        ) )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}