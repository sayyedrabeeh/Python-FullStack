{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\PythoFullStack\\\\full_react\\\\src\\\\react3\\\\pratical\\\\autocounter.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst counterSlice = createSlice({\n  name: 'Counter',\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    incremet: state => {\n      state.count += 1;\n    },\n    decrement: state => {\n      state.count -= 1;\n    },\n    reset: state => {\n      state.count = 0;\n    }\n  }\n});\nconst {\n  incremet,\n  decrement,\n  reset\n} = counterSlice.actions;\nconst store = configureStore({\n  reducer: {\n    Counter: counterSlice.reducer\n  }\n});\nexport { store };\nfunction Display() {\n  _s();\n  const count = useSelector(state => state.Counter.count);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"count:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(incremet()),\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(decrement()),\n      children: \"decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => reset(),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Display, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","createSlice","configureStore","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","counterSlice","name","initialState","count","reducers","incremet","state","decrement","reset","actions","store","reducer","Counter","Display","_s","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/project/PythoFullStack/full_react/src/react3/pratical/autocounter.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {createSlice,configureStore  } from '@reduxjs/toolkit'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\n\r\nconst counterSlice = createSlice({\r\n    name:'Counter',\r\n    initialState:{\r\n        count:0\r\n    },\r\n    reducers:{\r\n        incremet:(state) =>{\r\n            state.count+=1\r\n        },\r\n        decrement:(state) =>{\r\n            state.count-=1\r\n        },\r\n        reset :(state) =>{\r\n            state.count = 0 \r\n        }\r\n    }\r\n})\r\nconst { incremet,decrement,reset} = counterSlice.actions\r\n\r\nconst  store = configureStore({\r\n    reducer:{\r\n    Counter : counterSlice.reducer\r\n}})\r\n \r\nexport {store}\r\n\r\nfunction Display(){\r\n    const  count  = useSelector((state) => state.Counter.count)\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <>\r\n        <h2>count:{count}</h2>\r\n\r\n        <button onClick={()=>dispatch(incremet())}>increment</button>\r\n        <button onClick={()=>dispatch(decrement())}>decrement</button>\r\n        <button onClick={() =>reset()}>reset</button>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Display\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,EAACC,cAAc,QAAS,kBAAkB;AAC7D,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,YAAY,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAC,SAAS;EACdC,YAAY,EAAC;IACTC,KAAK,EAAC;EACV,CAAC;EACDC,QAAQ,EAAC;IACLC,QAAQ,EAAEC,KAAK,IAAI;MACfA,KAAK,CAACH,KAAK,IAAE,CAAC;IAClB,CAAC;IACDI,SAAS,EAAED,KAAK,IAAI;MAChBA,KAAK,CAACH,KAAK,IAAE,CAAC;IAClB,CAAC;IACDK,KAAK,EAAGF,KAAK,IAAI;MACbA,KAAK,CAACH,KAAK,GAAG,CAAC;IACnB;EACJ;AACJ,CAAC,CAAC;AACF,MAAM;EAAEE,QAAQ;EAACE,SAAS;EAACC;AAAK,CAAC,GAAGR,YAAY,CAACS,OAAO;AAExD,MAAOC,KAAK,GAAGjB,cAAc,CAAC;EAC1BkB,OAAO,EAAC;IACRC,OAAO,EAAGZ,YAAY,CAACW;EAC3B;AAAC,CAAC,CAAC;AAEH,SAAQD,KAAK;AAEb,SAASG,OAAOA,CAAA,EAAE;EAAAC,EAAA;EACd,MAAOX,KAAK,GAAIR,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACM,OAAO,CAACT,KAAK,CAAC;EAC3D,MAAMY,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAE9B,oBACIG,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA;MAAAmB,QAAA,GAAI,QAAM,EAACb,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEtBvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAIN,QAAQ,CAACV,QAAQ,CAAC,CAAC,CAAE;MAAAW,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAIN,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAE;MAAAS,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAKb,KAAK,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAE3C,CAAC;AAGX;AAACN,EAAA,CAfQD,OAAO;EAAA,QACIlB,WAAW,EACVD,WAAW;AAAA;AAAA4B,EAAA,GAFvBT,OAAO;AAkBhB,eAAeA,OAAO;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}